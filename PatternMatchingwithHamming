##Hamming distance included to allow counts of motifs AND similar motifs
def ApproximatePatternMatching(Text, Pattern, d):
    positions = [] 
    for i in range(len(Text) - len(Pattern)+1):
        if HammingDistance( Text[i:i+len(Pattern)], Pattern) <= d:
            positions.append(i)
    return positions


def HammingDistance(p, q):
    Distance = 0
    String1 = p
    String2 = q
    
    for i in range(len(String1)):
        if String1[i] == String2 [i]:
            Distance +=0
            
        else:
            Distance +=1
            
    return Distance 
